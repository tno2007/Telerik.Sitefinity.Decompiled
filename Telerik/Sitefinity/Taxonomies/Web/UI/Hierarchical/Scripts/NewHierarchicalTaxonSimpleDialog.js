Type.registerNamespace("Telerik.Sitefinity.Taxonomies.Web.UI.Hierarchical");
Telerik.Sitefinity.Taxonomies.Web.UI.Hierarchical.NewHierarchicalTaxonSimpleDialog=function(element){this._element=element;
this._dialogTitleElement=null;
this._taxonTitleField=null;
this._createButton=null;
this._cancelButton=null;
this._parentSelector=null;
this._taxonomyId=null;
this._taxonomyProvider=null;
this._taxonomyTitle=null;
this._taxonName=null;
this._createALabel=null;
this._createThisLabel=null;
this._selectAParentLabel=null;
this._noParentLabel=null;
this._selectorTitleLabel=null;
this._loadDelegate=null;
this._createButtonClickDelegate=null;
this._cancelButtonClickDelegate=null;
this._createTaxonSuccessDelegate=null;
this._createTaxonFailureDelegate=null;
this._dialogShowDelegate=null;
this._clientManager=null;
this._culture=null;
this._uiCulture=null;
this._fallbackMode=null;
this._webServiceUrl=null;
this._urlRegexFilter=null;
this._regularExpression=null;
Telerik.Sitefinity.Taxonomies.Web.UI.Hierarchical.NewHierarchicalTaxonSimpleDialog.initializeBase(this,[element]);
};
Telerik.Sitefinity.Taxonomies.Web.UI.Hierarchical.NewHierarchicalTaxonSimpleDialog.prototype={initialize:function(){this._clientManager=new Telerik.Sitefinity.Data.ClientManager();
if(this._createButtonClickDelegate==null){this._createButtonClickDelegate=Function.createDelegate(this,this._createButtonClicked);
}if(this._createButton){$addHandler(this._createButton,"click",this._createButtonClickDelegate);
}if(this._cancelButtonClickDelegate==null){this._cancelButtonClickDelegate=Function.createDelegate(this,this._cancelButtonClicked);
}if(this._createTaxonSuccessDelegate==null){this._createTaxonSuccessDelegate=Function.createDelegate(this,this._createTaxonSuccess);
}if(this._createTaxonFailureDelegate==null){this._createTaxonFailureDelegate=Function.createDelegate(this,this._createTaxonFailure);
}if(this._dialogShowDelegate==null){this._dialogShowDelegate=Function.createDelegate(this,this._dialogShowHandler);
}if(this._cancelButton){$addHandler(this._cancelButton,"click",this._cancelButtonClickDelegate);
}if(this._loadDelegate==null){this._loadDelegate=Function.createDelegate(this,this.loadDialog);
}Sys.Application.add_load(this._loadDelegate);
Telerik.Sitefinity.Taxonomies.Web.UI.Hierarchical.NewHierarchicalTaxonSimpleDialog.callBaseMethod(this,"initialize");
},dispose:function(){if(this._createButtonClickDelegate!=null){delete this._createButtonClickDelegate;
}if(this._cancelButtonClickDelegate!=null){delete this._cancelButtonClickDelegate;
}if(this._loadDelegate!=null){delete this._loadDelegate;
}if(this._createTaxonSuccessDelegate!=null){delete this._createTaxonSuccessDelegate;
}if(this._createTaxonFailureDelegate!=null){delete this._createTaxonFailureDelegate;
}if(this._dialogShowDelegate!==null){if(dialogBase&&dialogBase.get_radWindow&&dialogBase.get_radWindow()){dialogBase.get_radWindow().remove_show(this._dialogShowDelegate);
}delete this._dialogShowDelegate;
}Telerik.Sitefinity.Taxonomies.Web.UI.Hierarchical.NewHierarchicalTaxonSimpleDialog.callBaseMethod(this,"dispose");
},loadDialog:function(){if(this._taxonomyId==null){this._taxonomyId=dialogBase.getQueryValue("taxonomyId",true);
}if(this._taxonomyId==null){throw ('The dialog needs to have taxonomyId property initialized. You can initialize it by setting it directly on the component, or having the query string value with the key "taxonomyId"');
}if(this._taxonomyProvider==null){this._taxonomyProvider=dialogBase.getQueryValue("taxonomyProvider",true);
}if(this._taxonomyTitle==null){this._taxonomyTitle=dialogBase.getQueryValue("taxonomyTitle",true);
}if(this._taxonName==null){this._taxonName=dialogBase.getQueryValue("taxonName",true);
}this._dialogTitleElement.innerHTML=this._createALabel+" "+this._taxonName.toLowerCase();
this._taxonTitleField.set_title(this._taxonName);
this._createButton.innerHTML=this._createThisLabel+" "+this._taxonName.toLowerCase();
var serviceUrl=this._parentSelector.get_taxaTreeBinder().get_serviceBaseUrl();
serviceUrl=String.format(serviceUrl,this._taxonomyId);
this._parentSelector.add_taxaRootChoiceChanged(this._resizeDialog);
this._parentSelector.get_taxaTreeBinder().set_provider(this._taxonomyProvider);
this._parentSelector.get_taxaTreeBinder().set_orginalServiceBaseUrl(serviceUrl);
this._parentSelector.set_selectorTitleText(this._taxonName.toLowerCase());
this._parentSelector.set_selectorTitleTextTemplate(this._selectorTitleLabel);
this._parentSelector.set_rootRadioText(this._taxonName.toLowerCase());
this._parentSelector.set_taxaRadioText(this._selectAParentLabel);
dialogBase.get_radWindow().add_show(this._dialogShowDelegate);
dialogBase.resizeToContent();
},_createButtonClicked:function(){if(this._taxonTitleField.validate()){var parentTaxonId=this._parentSelector.get_selectedTaxa()[0];
var urlName=this._taxonTitleField.get_value();
if(urlName){urlName=urlName.toLowerCase().replace(this._get_regularExpression(),"-");
}var taxonName=this._taxonTitleField.get_value();
if(taxonName){taxonName=taxonName.toLowerCase().replace(this._get_regularExpression(),"-");
}var data={Id:this._clientManager.GetEmptyGuid(),TaxonomyId:this._taxonomyId,ParentTaxonId:parentTaxonId,Title:this._taxonTitleField.get_value(),Name:taxonName,UrlName:urlName};
var serviceUrl=this._webServiceUrl;
var urlParams=[];
urlParams.providerName=this._taxonomyProvider;
var keys=[this._taxonomyId,this._clientManager.GetEmptyGuid()];
var culture=this._getConfiguredCulture();
this._clientManager.set_uiCulture(culture);
this._clientManager.InvokePut(serviceUrl,urlParams,keys,data,this._createTaxonSuccessDelegate,this._createTaxonFailureDelegate,this);
}else{dialogBase.get_radWindow().autoSize();
}},_createTaxonSuccess:function(caller,result){this._reset();
dialogBase.close(result.Id);
},_createTaxonFailure:function(result){alert(result.Detail);
},_reset:function(){this._taxonTitleField.reset();
},_cancelButtonClicked:function(){this._reset();
dialogBase.close();
},_dialogShowHandler:function(){this._parentSelector.get_taxaTreeBinder().set_uiCulture(this._getConfiguredCulture());
},_resizeDialog:function(){dialogBase.resizeToContent();
},_get_regularExpression:function(){if(!this._regularExpression){this._regularExpression=new XRegExp(this._urlRegexFilter,"g");
}return this._regularExpression;
},_getConfiguredCulture:function(){var culture=null;
var args=dialogBase.get_radWindow()._sfArgs;
if(args&&args.uiCulture){return args.uiCulture;
}return culture;
},get_dialogTitleElement:function(){return this._dialogTitleElement;
},set_dialogTitleElement:function(value){this._dialogTitleElement=value;
},get_taxonTitleField:function(){return this._taxonTitleField;
},set_taxonTitleField:function(value){this._taxonTitleField=value;
},get_createButton:function(){return this._createButton;
},set_createButton:function(value){this._createButton=value;
},get_cancelButton:function(){return this._cancelButton;
},set_cancelButton:function(value){this._cancelButton=value;
},get_parentSelector:function(){return this._parentSelector;
},set_parentSelector:function(value){this._parentSelector=value;
},get_taxonomyId:function(){return this._taxonomyId;
},set_taxonomyId:function(value){this._taxonomyId=value;
},get_taxonomyProvider:function(){return this._taxonomyProvider;
},set_taxonomyProvider:function(value){this._taxonomyProvider=value;
},get_taxonomyTitle:function(){return this._taxonomyTitle;
},set_taxonomyTitle:function(value){this._taxonomyTitle=value;
},get_taxonName:function(){return this._taxonName;
},set_taxonName:function(value){this._taxonName=value;
},set_culture:function(culture){this._culture=culture;
},get_culture:function(){return this._culture;
},set_uiCulture:function(culture){this._uiCulture=culture;
},get_uiCulture:function(){return this._uiCulture;
},set_fallbackMode:function(culture){this._fallbackMode=culture;
},get_fallbackMode:function(){return this._fallbackMode;
}};
Telerik.Sitefinity.Taxonomies.Web.UI.Hierarchical.NewHierarchicalTaxonSimpleDialog.registerClass("Telerik.Sitefinity.Taxonomies.Web.UI.Hierarchical.NewHierarchicalTaxonSimpleDialog",Sys.UI.Control);
