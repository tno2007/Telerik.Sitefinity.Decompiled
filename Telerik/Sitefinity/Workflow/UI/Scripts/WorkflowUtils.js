Type.registerNamespace("Telerik.Sitefinity.Workflow.UI");
$workflow=Telerik.Sitefinity.Workflow.UI;
Telerik.Sitefinity.Workflow.UI.hasBeenAdded=function(currentScope,scopes){return scopes.some(function(scope){var cloneObj=Telerik.Sitefinity.cloneObject(scope);
delete cloneObj.Id;
if(cloneObj.Site){delete cloneObj.Site.Cultures;
}return Telerik.Sitefinity.compareObjects(cloneObj,currentScope);
});
};
Telerik.Sitefinity.Workflow.UI.getPageNodeItem=function(items){if(!items){return;
}return Telerik.Sitefinity.find(items,function(node){return node.ContentType===Telerik.Sitefinity.Workflow.UI.PAGE_NODE;
});
};
Telerik.Sitefinity.Workflow.UI.getDataItem=function(ev,dataSource){var targetRow=jQuery(ev.target).closest("tr");
var targetRowUid=targetRow.data("client-id");
var dataItem=dataSource.getByUid(targetRowUid);
return dataItem;
};
Telerik.Sitefinity.Workflow.UI.getActionUIName=function(action,labelManager){var actionName="";
switch(action){case $workflow.actionNames.approve:actionName=labelManager.getLabel("WorkflowResources","Approval");
break;
case $workflow.actionNames.review:actionName=labelManager.getLabel("WorkflowResources","Review");
break;
case $workflow.actionNames.publish:actionName=labelManager.getLabel("WorkflowResources","Publishing");
break;
}return actionName;
},Telerik.Sitefinity.Workflow.UI.PAGE_NODE="Telerik.Sitefinity.Pages.Model.PageNode";
Telerik.Sitefinity.Workflow.UI.actionNames={review:"Review",approve:"Approve",publish:"Publish"};
