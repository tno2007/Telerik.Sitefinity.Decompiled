// Decompiled with JetBrains decompiler
// Type: Telerik.Sitefinity.ModuleEditor.WidgetTemplates.FieldTemplateBuilder
// Assembly: Telerik.Sitefinity, Version=13.3.7600.0, Culture=neutral, PublicKeyToken=b28c218413bdf563
// MVID: 39C4B52A-B559-4D9C-97D9-CCCF73C3738E
// Assembly location: C:\Programs\Sitefinity\ProjectManager_13_3_7600\_EmptyProject\bin\Telerik.Sitefinity.dll

using System;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using Telerik.Sitefinity.DynamicModules.Builder;
using Telerik.Sitefinity.DynamicModules.Builder.Model;
using Telerik.Sitefinity.DynamicModules.Model;
using Telerik.Sitefinity.DynamicModules.Web.UI.Frontend;
using Telerik.Sitefinity.Libraries.Model;
using Telerik.Sitefinity.Localization;
using Telerik.Sitefinity.Modules.Libraries.Web.UI;
using Telerik.Sitefinity.Modules.Libraries.Web.UI.Documents;
using Telerik.Sitefinity.Modules.Libraries.Web.UI.Images;
using Telerik.Sitefinity.Modules.Libraries.Web.UI.Videos;
using Telerik.Sitefinity.Modules.Pages;
using Telerik.Sitefinity.Pages.Model;
using Telerik.Sitefinity.RelatedData;
using Telerik.Sitefinity.Utilities.TypeConverters;
using Telerik.Sitefinity.Web.UI.ContentUI;

namespace Telerik.Sitefinity.ModuleEditor.WidgetTemplates
{
  /// <summary>
  /// Internal class containing helper methods for generating widget templates for related data/media fields
  /// </summary>
  internal static class FieldTemplateBuilder
  {
    private static readonly Dictionary<string, string> StaticTypes = new Dictionary<string, string>()
    {
      {
        "News",
        "Telerik.Sitefinity.News.Model.NewsItem"
      },
      {
        "Blogs",
        "Telerik.Sitefinity.Blogs.Model.Blog"
      },
      {
        "BlogPosts",
        "Telerik.Sitefinity.Blogs.Model.BlogPost"
      },
      {
        "Events",
        "Telerik.Sitefinity.Events.Model.Event"
      },
      {
        "Products",
        "Telerik.Sitefinity.Ecommerce.Catalog.Model.Product"
      }
    };
    private const string relatedDataItemTemplate = "\r\n           <sf:{0} runat=\"server\" Title=\"{3}\" UrlKeyPrefix=\"\"  ProviderName=\"{5}\" !#AdditionalParams#!>\r\n\t            <RelatedDataDefinition RelatedFieldName=\"{1}\" RelatedItemType=\"{2}\" RelationTypeToDisplay=\"{4}\" RelatedItemSource=\"DataItemContainer\">\r\n\t            </RelatedDataDefinition>\r\n            </sf:{0}>";
    private const string relatedDocumentsItemsTemplate = "\r\n            <sf:{0} ControlDefinitionName=\"FrontendDocuments\" runat=\"server\" Title=\"{3}\" UrlKeyPrefix=\"\">\r\n                <RelatedDataDefinition RelatedFieldName=\"{1}\" RelatedItemType=\"{2}\" RelationTypeToDisplay=\"{4}\" RelatedItemSource=\"DataItemContainer\">\r\n                </RelatedDataDefinition>\t\r\n                <ControlDefinition ControlDefinitionName=\"FrontendDocuments\" runat=\"server\" ProviderName=\"{5}\">\r\n                    <Views>\r\n                        <sf:DownloadListViewMasterDefinition SortExpression=\"\" ViewName=\"MasterListView\" runat=\"server\">\r\n                        </sf:DownloadListViewMasterDefinition>\r\n                        <sf:DownloadListViewMasterDefinition SortExpression=\"\" ViewName=\"MasterTableView\" runat=\"server\">\r\n                        </sf:DownloadListViewMasterDefinition>\r\n                        <sf:DownloadListViewDetailDefinition ViewName=\"DetailsListView\" runat=\"server\">\r\n                        </sf:DownloadListViewDetailDefinition>\r\n                        <sf:DownloadListViewMasterDefinition SortExpression=\"\" ViewName=\"MasterListDetailView\" runat=\"server\">\r\n                        </sf:DownloadListViewMasterDefinition>\r\n                        <sf:DownloadListViewMasterDefinition SortExpression=\"\" ViewName=\"MasterTableDetailView\" runat=\"server\">\r\n                        </sf:DownloadListViewMasterDefinition>\r\n                    </Views>\r\n                </ControlDefinition>\r\n            </sf:{0}>";
    private const string relatedImagesGalleryTemplate = "\r\n            <sf:{0} ControlDefinitionName=\"ImagesFrontend\" runat=\"server\" MasterViewName=\"ImagesFrontendThumbnailsListLightBox\" Title=\"{3}\" UrlKeyPrefix=\"\">\r\n                <RelatedDataDefinition RelatedFieldName=\"{1}\" RelatedItemType=\"{2}\" RelationTypeToDisplay=\"{4}\" RelatedItemSource=\"DataItemContainer\">\r\n                </RelatedDataDefinition>\t\r\n                <ControlDefinition ControlDefinitionName=\"ImagesFrontend\" runat=\"server\" ProviderName=\"{5}\">\r\n                    <Views>\r\n                        <sf:ImagesViewMasterDefinition SortExpression=\"\" ViewName=\"ImagesFrontendThumbnailsListBasic\" runat=\"server\">\r\n                        </sf:ImagesViewMasterDefinition>\r\n                        <sf:ImagesViewMasterDefinition  SortExpression=\"\" ViewName=\"ImagesFrontendThumbnailsListLightBox\" runat=\"server\">\r\n                        </sf:ImagesViewMasterDefinition>\r\n                        <sf:ImagesViewMasterDefinition  SortExpression=\"\" ViewName=\"ImagesFrontendThumbnailsListSimple\" runat=\"server\">\r\n                        </sf:ImagesViewMasterDefinition>\r\n                        <sf:ImagesViewMasterDefinition  SortExpression=\"\" ViewName=\"ImagesFrontendThumbnailsListStrip\" runat=\"server\">\r\n                        </sf:ImagesViewMasterDefinition>\r\n                        <sf:ImagesViewDetailDefinition ViewName=\"ImagesDetailView\" runat=\"server\">\r\n                        </sf:ImagesViewDetailDefinition>\r\n                    </Views>\r\n                </ControlDefinition >\r\n            </sf:{0}>";
    private const string relatedImagesListTemplate = "\r\n            <sf:{0} runat=\"server\" Title=\"{3}\" ProviderName=\"{5}\" AllowPaging=\"True\" ItemsPerPage=\"20\" UrlKeyPrefix=\"\">\r\n                <RelatedDataDefinition RelatedFieldName=\"{1}\" RelatedItemType=\"{2}\" RelationTypeToDisplay=\"{4}\" RelatedItemSource=\"DataItemContainer\">\r\n                </RelatedDataDefinition>\r\n            </sf:{0}>";
    private const string relatedVideosTemplate = "\r\n            <sf:{0} ControlDefinitionName=\"VideosFrontend\" runat=\"server\" MasterViewName=\"VideosFrontendThumbnailsLightBox\" Title=\"{3}\" UrlKeyPrefix=\"\">\r\n                <RelatedDataDefinition RelatedFieldName=\"{1}\" RelatedItemType=\"{2}\" RelationTypeToDisplay=\"{4}\" RelatedItemSource=\"DataItemContainer\">\r\n                </RelatedDataDefinition>\t\r\n                <ControlDefinition ControlDefinitionName=\"VideosFrontend\" runat=\"server\" ProviderName=\"{5}\">\r\n                    <Views>\r\n                        <sf:VideosViewMasterDefinition SortExpression=\"\" ViewName=\"VideosFrontendThumbnailsList\" runat=\"server\">\r\n                        </sf:VideosViewMasterDefinition>\r\n                        <sf:VideosViewMasterDefinition SortExpression=\"\" ViewName=\"VideosFrontendThumbnailsLightBox\" runat=\"server\">\r\n                        </sf:VideosViewMasterDefinition>\r\n                        <sf:VideosViewDetailDefinition ViewName=\"VideosDetailView\" ShowEmbeddingOption=\"False\" ShowRelatedVideos=\"False\" runat=\"server\">\r\n                        </sf:VideosViewDetailDefinition>\r\n                    </Views>\r\n                </ControlDefinition>\r\n            </sf:{0}>";
    private const string relatedDynamicItemsTemplate = "\r\n            <sf:{0} runat=\"server\" Title=\"{3}\" UrlKeyPrefix=\"\" ContentViewDisplayMode=\"Master\" !#AdditionalParams#!>\r\n                <RelatedDataDefinition RelatedFieldName=\"{1}\" RelatedItemType=\"{2}\" RelationTypeToDisplay=\"{4}\" RelatedItemSource=\"DataItemContainer\">\r\n                </RelatedDataDefinition>\r\n                <ControlDefinition ControlDefinitionName=\"\" runat=\"server\"  ProviderName=\"{5}\">\r\n                    <Views>\r\n                        <sf:DynamicContentViewMasterDefinition ViewName=\"DynamicContentMasterView\" AllowPaging=\"True\" ItemsPerPage=\"20\" runat=\"server\">\r\n                        </sf:DynamicContentViewMasterDefinition>\r\n                        <sf:DynamicContentViewDetailDefinition ViewName=\"DynamicContentDetailView\" runat=\"server\">\r\n                        </sf:DynamicContentViewDetailDefinition>\r\n                    </Views>\r\n                </ControlDefinition >\r\n            </sf:{0}>";
    private const string relatedPagesTemplate = "\r\n            <sf:{0} runat=\"server\" Title=\"{3}\" UrlKeyPrefix=\"\" LayoutTemplatePath=\"~/SFRes/Telerik.Sitefinity.Resources.Templates.Frontend.Navigation.VerticalList.ascx\">\r\n                <RelatedDataDefinition RelatedFieldName=\"{1}\" RelatedItemType=\"{2}\" RelationTypeToDisplay=\"{4}\" RelatedItemSource=\"DataItemContainer\">\r\n                </RelatedDataDefinition>\r\n            </sf:{0}>";
    private const string relatedNewsTemplate = "\r\n            <sf:{0} ControlDefinitionName=\"NewsFrontend\" runat=\"server\" Title=\"{3}\" UrlKeyPrefix=\"\" ContentViewDisplayMode=\"Master\" !#AdditionalParams#!>\r\n                <RelatedDataDefinition RelatedFieldName=\"{1}\" RelatedItemType=\"{2}\" RelationTypeToDisplay=\"{4}\" RelatedItemSource=\"DataItemContainer\">\r\n                </RelatedDataDefinition>\r\n                <ControlDefinition ControlDefinitionName=\"NewsFrontend\" runat=\"server\" ProviderName=\"{5}\">\r\n                    <Views>\r\n                        <sf:ContentViewMasterDefinition ViewName=\"NewsFrontendList\" runat=\"server\">\r\n                        </sf:ContentViewMasterDefinition >\r\n                        <sf:ContentViewDetailDefinition ViewName=\"NewsFrontendDetails\" runat=\"server\">\r\n                        </sf:ContentViewDetailDefinition > \r\n                    </Views>\r\n                </ControlDefinition>\r\n            </sf:{0}>";
    private const string relatedBlogPostsTemplate = "\r\n            <sf:{0} ControlDefinitionName=\"BlogPostsFrontend\" runat=\"server\" Title=\"{3}\" UrlKeyPrefix=\"\" ContentViewDisplayMode=\"Master\" !#AdditionalParams#!>\r\n                <RelatedDataDefinition RelatedFieldName=\"{1}\" RelatedItemType=\"{2}\" RelationTypeToDisplay=\"{4}\" RelatedItemSource=\"DataItemContainer\">\r\n                </RelatedDataDefinition>\r\n                <ControlDefinition ControlDefinitionName=\"BlogPostsFrontend\" runat=\"server\" ProviderName=\"{5}\">\r\n\t\t            <Views>\r\n\t\t\t            <sf:ContentViewMasterDefinition ViewName=\"MasterBlogPostsFrontend\" runat=\"server\">\r\n\t\t\t            </sf:ContentViewMasterDefinition>\r\n\t\t\t            <sf:ContentViewDetailDefinition ViewName=\"DetailBlogPostsFrontend\" runat=\"server\">\r\n\t\t\t            </sf:ContentViewDetailDefinition>\r\n\t\t            </Views>\r\n\t            </ControlDefinition >\r\n            </sf:{0}>";
    private const string relatedProductsTemplate = "\r\n            <sf:{0} runat=\"server\" Title=\"{3}\" UrlKeyPrefix=\"\" ThumbnailProfileName=\"thumb80\">\r\n                <RelatedDataDefinition RelatedFieldName=\"{1}\" RelatedItemType=\"{2}\" RelationTypeToDisplay=\"{4}\" RelatedItemSource=\"DataItemContainer\">\r\n                </RelatedDataDefinition>\r\n            </sf:{0}>";
    private const string relatedEventsTemplate = "\r\n            <sf:{0} ControlDefinitionName=\"EventsFrontend\" runat=\"server\" Title=\"{3}\" UrlKeyPrefix=\"\" ContentViewDisplayMode=\"Master\" !#AdditionalParams#!>\r\n                <RelatedDataDefinition RelatedFieldName=\"{1}\" RelatedItemType=\"{2}\" RelationTypeToDisplay=\"{4}\" RelatedItemSource=\"DataItemContainer\">\r\n                </RelatedDataDefinition>\r\n\t            <ControlDefinition ControlDefinitionName=\"EventsFrontend\" runat=\"server\" ProviderName=\"{5}\">\r\n\t\t            <Views>\r\n\t\t\t            <sf:ContentViewMasterDefinition ViewName=\"EventsFrontendList\" runat=\"server\">\r\n\t\t\t            </sf:ContentViewMasterDefinition>\r\n\t\t\t            <sf:ContentViewDetailDefinition ViewName=\"EventsFrontendEdit\" runat=\"server\">\r\n\t\t\t            </sf:ContentViewDetailDefinition>\r\n\t\t\t            <sf:ContentViewMasterDefinition ViewName=\"EventsFrontendCalendar\" runat=\"server\">\r\n\t\t\t            </sf:ContentViewMasterDefinition>\r\n\t\t            </Views>\r\n\t            </ControlDefinition>\r\n            </sf:{0}>";
    private const string relatedResourceTemplate = "      \r\n<%@ Register Assembly=\"{0}\" Namespace=\"{1}\" TagPrefix=\"sf\" %>";
    private const string relatedControlByVirtualPathTemplate = "      \r\n        <%@ Register Src=\"{0}\" TagPrefix=\"sf\" TagName=\"{1}\" %>\r\n        <sf:{1} runat=\"server\" Title=\"{4}\" UrlKeyPrefix=\"\">\r\n            <RelatedDataDefinition RelatedFieldName=\"{1}\" RelatedItemType=\"{2}\" RelationTypeToDisplay=\"{3}\" RelatedItemSource=\"DataItemContainer\">\r\n            </RelatedDataDefinition>\r\n        </sf:{1}>";
    private const string inlineSingleItem = "\r\n            <div class=\"sfSnglRelatedItmWrp\">\r\n                <h2 class=\"sfrelatedItmTitle\">{2}</h2>\r\n                <div class=\"sfrelatedItmWrp\">\r\n                    <a href='<%# Telerik.Sitefinity.RelatedData.RelatedDataExtensions.GetDefaultUrl(Eval(\"{0}\")) %>'><%#: Eval(\"{0}.{1}\") %></a>\r\n                </div>\r\n            </div>";
    private const string inlineListItem = "\r\n            <div class=\"sfMultiRelatedItmsWrp\">\r\n                <h2 class=\"sfrelatedItmTitle\">{2}</h2>\r\n                <ul class=\"sfrelatedList sflist\">\r\n                    <asp:Repeater runat=\"server\" DataSource='<%# Eval(\"{0}\") %>'>\r\n                        <ItemTemplate>\r\n                            <li class=\"sfrelatedListItem sflistitem\"><a href='<%# Telerik.Sitefinity.RelatedData.RelatedDataExtensions.GetDefaultUrl(Container.DataItem) %>'><%#: Eval(\"{1}\") %></a></li>\r\n                        </ItemTemplate>\r\n                    </asp:Repeater>\r\n                </ul>\r\n            </div>";
    private const string inlineSinglePage = "\r\n            <div class=\"sfSnglRelatedItmWrp\">\r\n                <h2 class=\"sfrelatedItmTitle\">{2}</h2>\r\n                <div class=\"sfrelatedItmWrp\">\r\n                    <a <%# (Eval(\"{0}\") != null) && ((Telerik.Sitefinity.Pages.Model.PageNode)Eval(\"{0}\")).OpenNewWindow ? \"target=\\\"_blank\\\" \" : \"\" %>href='<%# Telerik.Sitefinity.RelatedData.RelatedDataExtensions.GetDefaultUrl(Eval(\"{0}\")) %>'><%#: Eval(\"{0}.{1}\") %></a>\r\n                </div>\r\n            </div>";
    private const string inlinePageList = "\r\n            <div class=\"sfMultiRelatedItmsWrp\">\r\n                <h2 class=\"sfrelatedItmTitle\">{2}</h2>\r\n                <ul class=\"sfrelatedList sflist\">\r\n                    <asp:Repeater runat=\"server\" DataSource='<%# Eval(\"{0}\") %>'>\r\n                        <ItemTemplate>\r\n                            <li class=\"sfrelatedListItem sflistitem\"><a <%# ((Telerik.Sitefinity.Pages.Model.PageNode)Container.DataItem).OpenNewWindow ? \"target=\\\"_blank\\\" \" : \"\" %>href='<%# Telerik.Sitefinity.RelatedData.RelatedDataExtensions.GetDefaultUrl(Container.DataItem) %>'><%#: Eval(\"{1}\") %></a></li>\r\n                        </ItemTemplate>\r\n                    </asp:Repeater>\r\n                </ul>\r\n            </div>";
    private const string inlineSingleImageItem = "\r\n            <div class=\"sfSnglRelatedItmWrp\">\r\n                <h2 class=\"sfrelatedItmTitle\">{2}</h2>\r\n                <div class=\"sfrelatedItmWrp\">\r\n                    <img src='<%# Eval(\"{0}.MediaUrl\")%>' alt='<%# Eval(\"{0}.AlternativeText\")%>' title='<%#: Eval(\"{0}.{1}\") %>' />\r\n                </div>\r\n            </div>";
    private const string inlineImageListItem = "\r\n            <div class=\"sfMultiRelatedItmsWrp\">\r\n                <h2 class=\"sfrelatedItmTitle\">{2}</h2>\r\n                <ul class=\"sfrelatedList sflist\">\r\n                    <asp:Repeater runat=\"server\" DataSource='<%# Eval(\"{0}\") %>'>\r\n                        <ItemTemplate>\r\n                            <li class=\"sfrelatedListItem sflistitem\">\r\n                                <a href='<%# Eval(\"MediaUrl\") %>'>\r\n                                    <img src='<%# Eval(\"ThumbnailUrl\")%>' alt='<%# Eval(\"AlternativeText\")%>' title='<%#: Eval(\"{1}\") %>' />\r\n                                </a>\r\n                            </li>\r\n                        </ItemTemplate>\r\n                    </asp:Repeater>\r\n                </ul>\r\n            </div>";
    private const string inlineSingleVideoItem = "\r\n            <div class=\"sfSnglRelatedItmWrp\">\r\n                <h2 class=\"sfrelatedItmTitle\">{2}</h2>\r\n                <div class=\"sfrelatedItmWrp\">\r\n                    <video controls>\r\n                        <source  src='<%# Eval(\"{0}.MediaUrl\")%>'>\r\n                    </video>\r\n                </div>\r\n            </div>";
    private const string inlineVideoListItem = "\r\n            <div class=\"sfMultiRelatedItmsWrp\">\r\n                <h2 class=\"sfrelatedItmTitle\">{2}</h2>\r\n                <ul class=\"sfrelatedList sflist\">\r\n                    <asp:Repeater runat=\"server\" DataSource='<%# Eval(\"{0}\") %>'>\r\n                        <ItemTemplate>\r\n                            <li class=\"sfrelatedListItem sflistitem\">\r\n                                <video controls>\r\n                                    <source  src='<%# Eval(\"MediaUrl\")%>'>\r\n                                </video>\r\n                            </li>\r\n                        </ItemTemplate>\r\n                    </asp:Repeater>\r\n                </ul>\r\n            </div>";
    private const string inlineSingleDocumentItem = "\r\n            <div class=\"sfSnglRelatedItmWrp\">\r\n                <h2 class=\"sfrelatedItmTitle\">{2}</h2>\r\n                <div class=\"sfrelatedItmWrp\">\r\n                    <a href='<%# Eval(\"{0}.MediaUrl\")%>'>\r\n                        <%#: Eval(\"{0}.{1}\") %>\r\n                    </a>\r\n                </div>\r\n            </div>";
    private const string inlineDocumentListItem = "\r\n            <div class=\"sfMultiRelatedItmsWrp\">\r\n                <h2 class=\"sfrelatedItmTitle\">{2}</h2>\r\n                <ul class=\"sfrelatedList sflist\">\r\n                    <asp:Repeater runat=\"server\" DataSource='<%# Eval(\"{0}\") %>'>\r\n                        <ItemTemplate>\r\n                            <li class=\"sfrelatedListItem sflistitem\">\r\n                               <a href='<%# Eval(\"MediaUrl\")%>'>\r\n                                  <%#: Eval(\"{1}\") %>\r\n                               </a>\r\n                            </li>\r\n                        </ItemTemplate>\r\n                    </asp:Repeater>\r\n                </ul>\r\n            </div>";

    /// <summary>
    /// Generates field template for related data/media field.
    /// </summary>
    /// <param name="frontendWidgetTypeName">Name of the frontend widget type.</param>
    /// <param name="frontendWidgetLabel">The frontend widget label.</param>
    /// <param name="parentTypeName">Name of the parent type.</param>
    /// <param name="childTypeName">Name of the child type.</param>
    /// <param name="fieldName">Name of the field.</param>
    /// <param name="isMasterView">if set to <c>true</c> [is master view].</param>
    /// <param name="trim">if set to <c>true</c> [trim].</param>
    /// <param name="registerAssembly">if set to <c>true</c> [register assembly].</param>
    /// <returns></returns>
    public static string BuildRelatedDataFieldTemplate(
      string frontendWidgetTypeName,
      string frontendWidgetLabel,
      string parentTypeName,
      string childTypeName,
      string childTypeProviderName,
      string fieldName,
      bool isMasterView,
      bool trim = true,
      bool registerAssembly = true)
    {
      string str1 = string.Empty;
      Type type1 = TypeResolutionService.ResolveType(childTypeName, false);
      Type type2 = TypeResolutionService.ResolveType(frontendWidgetTypeName, false);
      string empty = string.Empty;
      if ("inline".Equals(frontendWidgetTypeName))
      {
        string typeIdentifierField = RelatedDataHelper.GetRelatedTypeIdentifierField(childTypeName);
        str1 = string.Format(FieldTemplateBuilder.GetInlineFieldTemplate(isMasterView, type1), (object) fieldName, (object) typeIdentifierField, (object) frontendWidgetLabel);
      }
      else if (type1 != (Type) null && type2 != (Type) null)
      {
        str1 = string.Format(FieldTemplateBuilder.GetFieldTemplate(type1, type2), (object) type2.Name, (object) fieldName, (object) parentTypeName, (object) frontendWidgetLabel, (object) RelationDirection.Child, (object) childTypeProviderName);
        if (registerAssembly)
        {
          string str2 = string.Format("      \r\n<%@ Register Assembly=\"{0}\" Namespace=\"{1}\" TagPrefix=\"sf\" %>", (object) type2.Assembly.GetName().Name, (object) type2.Namespace);
          if (typeof (MediaContentView).IsAssignableFrom(type2))
            str2 += string.Format("      \r\n<%@ Register Assembly=\"{0}\" Namespace=\"{1}\" TagPrefix=\"sf\" %>", (object) "Telerik.Sitefinity", (object) "Telerik.Sitefinity.Modules.Libraries.Web.UI");
          else if (typeof (ContentView).IsAssignableFrom(type2))
            str2 += string.Format("      \r\n<%@ Register Assembly=\"{0}\" Namespace=\"{1}\" TagPrefix=\"sf\" %>", (object) "Telerik.Sitefinity", (object) "Telerik.Sitefinity.Web.UI.ContentUI");
          str1 = string.Format("<%--{0}--%>", (object) FieldTemplateBuilder.GetModuleEditorResources().RelatedResourceComment) + str2 + str1;
        }
      }
      else if (type1 != (Type) null && frontendWidgetTypeName.StartsWith("~/"))
        str1 = string.Format("      \r\n        <%@ Register Src=\"{0}\" TagPrefix=\"sf\" TagName=\"{1}\" %>\r\n        <sf:{1} runat=\"server\" Title=\"{4}\" UrlKeyPrefix=\"\">\r\n            <RelatedDataDefinition RelatedFieldName=\"{1}\" RelatedItemType=\"{2}\" RelationTypeToDisplay=\"{3}\" RelatedItemSource=\"DataItemContainer\">\r\n            </RelatedDataDefinition>\r\n        </sf:{1}>", (object) frontendWidgetTypeName, (object) fieldName, (object) parentTypeName, (object) RelationDirection.Child, (object) frontendWidgetLabel);
      if (trim)
        str1 = str1.Trim();
      return str1;
    }

    /// <summary>
    /// Returns the ModuleEditorResources instance. Used for unit tests.
    /// </summary>
    /// <returns>The resources</returns>
    private static ModuleEditorResources GetModuleEditorResources() => Res.Get<ModuleEditorResources>();

    private static string GetFieldTemplate(Type childItemType, Type frontendWidget)
    {
      string str = string.Empty;
      string newValue = string.Empty;
      if (typeof (Image).IsAssignableFrom(childItemType) && typeof (ImagesView).IsAssignableFrom(frontendWidget))
        str = "\r\n            <sf:{0} ControlDefinitionName=\"ImagesFrontend\" runat=\"server\" MasterViewName=\"ImagesFrontendThumbnailsListLightBox\" Title=\"{3}\" UrlKeyPrefix=\"\">\r\n                <RelatedDataDefinition RelatedFieldName=\"{1}\" RelatedItemType=\"{2}\" RelationTypeToDisplay=\"{4}\" RelatedItemSource=\"DataItemContainer\">\r\n                </RelatedDataDefinition>\t\r\n                <ControlDefinition ControlDefinitionName=\"ImagesFrontend\" runat=\"server\" ProviderName=\"{5}\">\r\n                    <Views>\r\n                        <sf:ImagesViewMasterDefinition SortExpression=\"\" ViewName=\"ImagesFrontendThumbnailsListBasic\" runat=\"server\">\r\n                        </sf:ImagesViewMasterDefinition>\r\n                        <sf:ImagesViewMasterDefinition  SortExpression=\"\" ViewName=\"ImagesFrontendThumbnailsListLightBox\" runat=\"server\">\r\n                        </sf:ImagesViewMasterDefinition>\r\n                        <sf:ImagesViewMasterDefinition  SortExpression=\"\" ViewName=\"ImagesFrontendThumbnailsListSimple\" runat=\"server\">\r\n                        </sf:ImagesViewMasterDefinition>\r\n                        <sf:ImagesViewMasterDefinition  SortExpression=\"\" ViewName=\"ImagesFrontendThumbnailsListStrip\" runat=\"server\">\r\n                        </sf:ImagesViewMasterDefinition>\r\n                        <sf:ImagesViewDetailDefinition ViewName=\"ImagesDetailView\" runat=\"server\">\r\n                        </sf:ImagesViewDetailDefinition>\r\n                    </Views>\r\n                </ControlDefinition >\r\n            </sf:{0}>";
      else if (typeof (Video).IsAssignableFrom(childItemType) && typeof (VideosView).IsAssignableFrom(frontendWidget))
        str = "\r\n            <sf:{0} ControlDefinitionName=\"VideosFrontend\" runat=\"server\" MasterViewName=\"VideosFrontendThumbnailsLightBox\" Title=\"{3}\" UrlKeyPrefix=\"\">\r\n                <RelatedDataDefinition RelatedFieldName=\"{1}\" RelatedItemType=\"{2}\" RelationTypeToDisplay=\"{4}\" RelatedItemSource=\"DataItemContainer\">\r\n                </RelatedDataDefinition>\t\r\n                <ControlDefinition ControlDefinitionName=\"VideosFrontend\" runat=\"server\" ProviderName=\"{5}\">\r\n                    <Views>\r\n                        <sf:VideosViewMasterDefinition SortExpression=\"\" ViewName=\"VideosFrontendThumbnailsList\" runat=\"server\">\r\n                        </sf:VideosViewMasterDefinition>\r\n                        <sf:VideosViewMasterDefinition SortExpression=\"\" ViewName=\"VideosFrontendThumbnailsLightBox\" runat=\"server\">\r\n                        </sf:VideosViewMasterDefinition>\r\n                        <sf:VideosViewDetailDefinition ViewName=\"VideosDetailView\" ShowEmbeddingOption=\"False\" ShowRelatedVideos=\"False\" runat=\"server\">\r\n                        </sf:VideosViewDetailDefinition>\r\n                    </Views>\r\n                </ControlDefinition>\r\n            </sf:{0}>";
      else if (typeof (Document).IsAssignableFrom(childItemType) && typeof (DownloadListView).IsAssignableFrom(frontendWidget))
        str = "\r\n            <sf:{0} ControlDefinitionName=\"FrontendDocuments\" runat=\"server\" Title=\"{3}\" UrlKeyPrefix=\"\">\r\n                <RelatedDataDefinition RelatedFieldName=\"{1}\" RelatedItemType=\"{2}\" RelationTypeToDisplay=\"{4}\" RelatedItemSource=\"DataItemContainer\">\r\n                </RelatedDataDefinition>\t\r\n                <ControlDefinition ControlDefinitionName=\"FrontendDocuments\" runat=\"server\" ProviderName=\"{5}\">\r\n                    <Views>\r\n                        <sf:DownloadListViewMasterDefinition SortExpression=\"\" ViewName=\"MasterListView\" runat=\"server\">\r\n                        </sf:DownloadListViewMasterDefinition>\r\n                        <sf:DownloadListViewMasterDefinition SortExpression=\"\" ViewName=\"MasterTableView\" runat=\"server\">\r\n                        </sf:DownloadListViewMasterDefinition>\r\n                        <sf:DownloadListViewDetailDefinition ViewName=\"DetailsListView\" runat=\"server\">\r\n                        </sf:DownloadListViewDetailDefinition>\r\n                        <sf:DownloadListViewMasterDefinition SortExpression=\"\" ViewName=\"MasterListDetailView\" runat=\"server\">\r\n                        </sf:DownloadListViewMasterDefinition>\r\n                        <sf:DownloadListViewMasterDefinition SortExpression=\"\" ViewName=\"MasterTableDetailView\" runat=\"server\">\r\n                        </sf:DownloadListViewMasterDefinition>\r\n                    </Views>\r\n                </ControlDefinition>\r\n            </sf:{0}>";
      else if (typeof (DynamicContent).IsAssignableFrom(childItemType))
      {
        Guid masterTemplateId;
        Guid detailsTemplateId;
        FieldTemplateBuilder.GetDynamicContentWidgetTemplateId(childItemType, out masterTemplateId, out detailsTemplateId);
        newValue = string.Format("DefaultMasterTemplateKey='{0}' DefaultDetailTemplateKey='{1}' DynamicContentTypeName='{2}'", (object) masterTemplateId, (object) detailsTemplateId, (object) childItemType.FullName);
        str = "\r\n            <sf:{0} runat=\"server\" Title=\"{3}\" UrlKeyPrefix=\"\" ContentViewDisplayMode=\"Master\" !#AdditionalParams#!>\r\n                <RelatedDataDefinition RelatedFieldName=\"{1}\" RelatedItemType=\"{2}\" RelationTypeToDisplay=\"{4}\" RelatedItemSource=\"DataItemContainer\">\r\n                </RelatedDataDefinition>\r\n                <ControlDefinition ControlDefinitionName=\"\" runat=\"server\"  ProviderName=\"{5}\">\r\n                    <Views>\r\n                        <sf:DynamicContentViewMasterDefinition ViewName=\"DynamicContentMasterView\" AllowPaging=\"True\" ItemsPerPage=\"20\" runat=\"server\">\r\n                        </sf:DynamicContentViewMasterDefinition>\r\n                        <sf:DynamicContentViewDetailDefinition ViewName=\"DynamicContentDetailView\" runat=\"server\">\r\n                        </sf:DynamicContentViewDetailDefinition>\r\n                    </Views>\r\n                </ControlDefinition >\r\n            </sf:{0}>";
      }
      else if (typeof (PageNode).IsAssignableFrom(childItemType))
        str = "\r\n            <sf:{0} runat=\"server\" Title=\"{3}\" UrlKeyPrefix=\"\" LayoutTemplatePath=\"~/SFRes/Telerik.Sitefinity.Resources.Templates.Frontend.Navigation.VerticalList.ascx\">\r\n                <RelatedDataDefinition RelatedFieldName=\"{1}\" RelatedItemType=\"{2}\" RelationTypeToDisplay=\"{4}\" RelatedItemSource=\"DataItemContainer\">\r\n                </RelatedDataDefinition>\r\n            </sf:{0}>";
      Type type1 = TypeResolutionService.ResolveType(FieldTemplateBuilder.StaticTypes["News"], false);
      if (type1 != (Type) null && type1.IsAssignableFrom(childItemType))
        str = "\r\n            <sf:{0} ControlDefinitionName=\"NewsFrontend\" runat=\"server\" Title=\"{3}\" UrlKeyPrefix=\"\" ContentViewDisplayMode=\"Master\" !#AdditionalParams#!>\r\n                <RelatedDataDefinition RelatedFieldName=\"{1}\" RelatedItemType=\"{2}\" RelationTypeToDisplay=\"{4}\" RelatedItemSource=\"DataItemContainer\">\r\n                </RelatedDataDefinition>\r\n                <ControlDefinition ControlDefinitionName=\"NewsFrontend\" runat=\"server\" ProviderName=\"{5}\">\r\n                    <Views>\r\n                        <sf:ContentViewMasterDefinition ViewName=\"NewsFrontendList\" runat=\"server\">\r\n                        </sf:ContentViewMasterDefinition >\r\n                        <sf:ContentViewDetailDefinition ViewName=\"NewsFrontendDetails\" runat=\"server\">\r\n                        </sf:ContentViewDetailDefinition > \r\n                    </Views>\r\n                </ControlDefinition>\r\n            </sf:{0}>";
      Type type2 = TypeResolutionService.ResolveType(FieldTemplateBuilder.StaticTypes["Events"], false);
      if (type2 != (Type) null && type2.IsAssignableFrom(childItemType))
        str = "\r\n            <sf:{0} ControlDefinitionName=\"EventsFrontend\" runat=\"server\" Title=\"{3}\" UrlKeyPrefix=\"\" ContentViewDisplayMode=\"Master\" !#AdditionalParams#!>\r\n                <RelatedDataDefinition RelatedFieldName=\"{1}\" RelatedItemType=\"{2}\" RelationTypeToDisplay=\"{4}\" RelatedItemSource=\"DataItemContainer\">\r\n                </RelatedDataDefinition>\r\n\t            <ControlDefinition ControlDefinitionName=\"EventsFrontend\" runat=\"server\" ProviderName=\"{5}\">\r\n\t\t            <Views>\r\n\t\t\t            <sf:ContentViewMasterDefinition ViewName=\"EventsFrontendList\" runat=\"server\">\r\n\t\t\t            </sf:ContentViewMasterDefinition>\r\n\t\t\t            <sf:ContentViewDetailDefinition ViewName=\"EventsFrontendEdit\" runat=\"server\">\r\n\t\t\t            </sf:ContentViewDetailDefinition>\r\n\t\t\t            <sf:ContentViewMasterDefinition ViewName=\"EventsFrontendCalendar\" runat=\"server\">\r\n\t\t\t            </sf:ContentViewMasterDefinition>\r\n\t\t            </Views>\r\n\t            </ControlDefinition>\r\n            </sf:{0}>";
      Type type3 = TypeResolutionService.ResolveType(FieldTemplateBuilder.StaticTypes["BlogPosts"], false);
      if (type3 != (Type) null && type3.IsAssignableFrom(childItemType))
        str = "\r\n            <sf:{0} ControlDefinitionName=\"BlogPostsFrontend\" runat=\"server\" Title=\"{3}\" UrlKeyPrefix=\"\" ContentViewDisplayMode=\"Master\" !#AdditionalParams#!>\r\n                <RelatedDataDefinition RelatedFieldName=\"{1}\" RelatedItemType=\"{2}\" RelationTypeToDisplay=\"{4}\" RelatedItemSource=\"DataItemContainer\">\r\n                </RelatedDataDefinition>\r\n                <ControlDefinition ControlDefinitionName=\"BlogPostsFrontend\" runat=\"server\" ProviderName=\"{5}\">\r\n\t\t            <Views>\r\n\t\t\t            <sf:ContentViewMasterDefinition ViewName=\"MasterBlogPostsFrontend\" runat=\"server\">\r\n\t\t\t            </sf:ContentViewMasterDefinition>\r\n\t\t\t            <sf:ContentViewDetailDefinition ViewName=\"DetailBlogPostsFrontend\" runat=\"server\">\r\n\t\t\t            </sf:ContentViewDetailDefinition>\r\n\t\t            </Views>\r\n\t            </ControlDefinition >\r\n            </sf:{0}>";
      Type type4 = TypeResolutionService.ResolveType(FieldTemplateBuilder.StaticTypes["Products"], false);
      if (type4 != (Type) null && type4.IsAssignableFrom(childItemType))
        str = "\r\n            <sf:{0} runat=\"server\" Title=\"{3}\" UrlKeyPrefix=\"\" ThumbnailProfileName=\"thumb80\">\r\n                <RelatedDataDefinition RelatedFieldName=\"{1}\" RelatedItemType=\"{2}\" RelationTypeToDisplay=\"{4}\" RelatedItemSource=\"DataItemContainer\">\r\n                </RelatedDataDefinition>\r\n            </sf:{0}>";
      if (string.IsNullOrEmpty(str))
        str = "\r\n           <sf:{0} runat=\"server\" Title=\"{3}\" UrlKeyPrefix=\"\"  ProviderName=\"{5}\" !#AdditionalParams#!>\r\n\t            <RelatedDataDefinition RelatedFieldName=\"{1}\" RelatedItemType=\"{2}\" RelationTypeToDisplay=\"{4}\" RelatedItemSource=\"DataItemContainer\">\r\n\t            </RelatedDataDefinition>\r\n            </sf:{0}>";
      return str.Replace("!#AdditionalParams#!", newValue);
    }

    private static string GetInlineFieldTemplate(bool isMasterView, Type childType)
    {
      string empty = string.Empty;
      return !typeof (Image).IsAssignableFrom(childType) ? (!typeof (Video).IsAssignableFrom(childType) ? (!typeof (Document).IsAssignableFrom(childType) ? (!typeof (PageNode).IsAssignableFrom(childType) ? (!isMasterView ? "\r\n            <div class=\"sfSnglRelatedItmWrp\">\r\n                <h2 class=\"sfrelatedItmTitle\">{2}</h2>\r\n                <div class=\"sfrelatedItmWrp\">\r\n                    <a href='<%# Telerik.Sitefinity.RelatedData.RelatedDataExtensions.GetDefaultUrl(Eval(\"{0}\")) %>'><%#: Eval(\"{0}.{1}\") %></a>\r\n                </div>\r\n            </div>" : "\r\n            <div class=\"sfMultiRelatedItmsWrp\">\r\n                <h2 class=\"sfrelatedItmTitle\">{2}</h2>\r\n                <ul class=\"sfrelatedList sflist\">\r\n                    <asp:Repeater runat=\"server\" DataSource='<%# Eval(\"{0}\") %>'>\r\n                        <ItemTemplate>\r\n                            <li class=\"sfrelatedListItem sflistitem\"><a href='<%# Telerik.Sitefinity.RelatedData.RelatedDataExtensions.GetDefaultUrl(Container.DataItem) %>'><%#: Eval(\"{1}\") %></a></li>\r\n                        </ItemTemplate>\r\n                    </asp:Repeater>\r\n                </ul>\r\n            </div>") : (!isMasterView ? "\r\n            <div class=\"sfSnglRelatedItmWrp\">\r\n                <h2 class=\"sfrelatedItmTitle\">{2}</h2>\r\n                <div class=\"sfrelatedItmWrp\">\r\n                    <a <%# (Eval(\"{0}\") != null) && ((Telerik.Sitefinity.Pages.Model.PageNode)Eval(\"{0}\")).OpenNewWindow ? \"target=\\\"_blank\\\" \" : \"\" %>href='<%# Telerik.Sitefinity.RelatedData.RelatedDataExtensions.GetDefaultUrl(Eval(\"{0}\")) %>'><%#: Eval(\"{0}.{1}\") %></a>\r\n                </div>\r\n            </div>" : "\r\n            <div class=\"sfMultiRelatedItmsWrp\">\r\n                <h2 class=\"sfrelatedItmTitle\">{2}</h2>\r\n                <ul class=\"sfrelatedList sflist\">\r\n                    <asp:Repeater runat=\"server\" DataSource='<%# Eval(\"{0}\") %>'>\r\n                        <ItemTemplate>\r\n                            <li class=\"sfrelatedListItem sflistitem\"><a <%# ((Telerik.Sitefinity.Pages.Model.PageNode)Container.DataItem).OpenNewWindow ? \"target=\\\"_blank\\\" \" : \"\" %>href='<%# Telerik.Sitefinity.RelatedData.RelatedDataExtensions.GetDefaultUrl(Container.DataItem) %>'><%#: Eval(\"{1}\") %></a></li>\r\n                        </ItemTemplate>\r\n                    </asp:Repeater>\r\n                </ul>\r\n            </div>")) : (!isMasterView ? "\r\n            <div class=\"sfSnglRelatedItmWrp\">\r\n                <h2 class=\"sfrelatedItmTitle\">{2}</h2>\r\n                <div class=\"sfrelatedItmWrp\">\r\n                    <a href='<%# Eval(\"{0}.MediaUrl\")%>'>\r\n                        <%#: Eval(\"{0}.{1}\") %>\r\n                    </a>\r\n                </div>\r\n            </div>" : "\r\n            <div class=\"sfMultiRelatedItmsWrp\">\r\n                <h2 class=\"sfrelatedItmTitle\">{2}</h2>\r\n                <ul class=\"sfrelatedList sflist\">\r\n                    <asp:Repeater runat=\"server\" DataSource='<%# Eval(\"{0}\") %>'>\r\n                        <ItemTemplate>\r\n                            <li class=\"sfrelatedListItem sflistitem\">\r\n                               <a href='<%# Eval(\"MediaUrl\")%>'>\r\n                                  <%#: Eval(\"{1}\") %>\r\n                               </a>\r\n                            </li>\r\n                        </ItemTemplate>\r\n                    </asp:Repeater>\r\n                </ul>\r\n            </div>")) : (!isMasterView ? "\r\n            <div class=\"sfSnglRelatedItmWrp\">\r\n                <h2 class=\"sfrelatedItmTitle\">{2}</h2>\r\n                <div class=\"sfrelatedItmWrp\">\r\n                    <video controls>\r\n                        <source  src='<%# Eval(\"{0}.MediaUrl\")%>'>\r\n                    </video>\r\n                </div>\r\n            </div>" : "\r\n            <div class=\"sfMultiRelatedItmsWrp\">\r\n                <h2 class=\"sfrelatedItmTitle\">{2}</h2>\r\n                <ul class=\"sfrelatedList sflist\">\r\n                    <asp:Repeater runat=\"server\" DataSource='<%# Eval(\"{0}\") %>'>\r\n                        <ItemTemplate>\r\n                            <li class=\"sfrelatedListItem sflistitem\">\r\n                                <video controls>\r\n                                    <source  src='<%# Eval(\"MediaUrl\")%>'>\r\n                                </video>\r\n                            </li>\r\n                        </ItemTemplate>\r\n                    </asp:Repeater>\r\n                </ul>\r\n            </div>")) : (!isMasterView ? "\r\n            <div class=\"sfSnglRelatedItmWrp\">\r\n                <h2 class=\"sfrelatedItmTitle\">{2}</h2>\r\n                <div class=\"sfrelatedItmWrp\">\r\n                    <img src='<%# Eval(\"{0}.MediaUrl\")%>' alt='<%# Eval(\"{0}.AlternativeText\")%>' title='<%#: Eval(\"{0}.{1}\") %>' />\r\n                </div>\r\n            </div>" : "\r\n            <div class=\"sfMultiRelatedItmsWrp\">\r\n                <h2 class=\"sfrelatedItmTitle\">{2}</h2>\r\n                <ul class=\"sfrelatedList sflist\">\r\n                    <asp:Repeater runat=\"server\" DataSource='<%# Eval(\"{0}\") %>'>\r\n                        <ItemTemplate>\r\n                            <li class=\"sfrelatedListItem sflistitem\">\r\n                                <a href='<%# Eval(\"MediaUrl\") %>'>\r\n                                    <img src='<%# Eval(\"ThumbnailUrl\")%>' alt='<%# Eval(\"AlternativeText\")%>' title='<%#: Eval(\"{1}\") %>' />\r\n                                </a>\r\n                            </li>\r\n                        </ItemTemplate>\r\n                    </asp:Repeater>\r\n                </ul>\r\n            </div>");
    }

    private static void GetDynamicContentWidgetTemplateId(
      Type itemType,
      out Guid masterTemplateId,
      out Guid detailsTemplateId)
    {
      ModuleBuilderManager manager = ModuleBuilderManager.GetManager();
      DynamicModuleType dynamicModuleType = manager.GetDynamicModuleType(itemType);
      string areaName = string.Format("{0} - {1}", (object) manager.GetDynamicModule(dynamicModuleType.ParentModuleId).Title, (object) dynamicModuleType.DisplayName);
      masterTemplateId = FieldTemplateBuilder.GetWidgetTemplateId(typeof (DynamicContentViewMaster), areaName, itemType.FullName);
      detailsTemplateId = FieldTemplateBuilder.GetWidgetTemplateId(typeof (DynamicContentViewDetail), areaName, itemType.FullName);
    }

    private static Guid GetWidgetTemplateId(
      Type controlType,
      string areaName,
      string typeFullName)
    {
      ControlPresentation controlPresentation = PageManager.GetManager().GetPresentationItems<ControlPresentation>().FirstOrDefault<ControlPresentation>((Expression<Func<ControlPresentation, bool>>) (p => p.DataType == "ASP_NET_TEMPLATE" && p.ControlType == controlType.FullName && p.AreaName == areaName && p.Condition == typeFullName));
      return controlPresentation == null ? Guid.Empty : controlPresentation.Id;
    }
  }
}
