Type.registerNamespace("Telerik.Sitefinity.Web.UI.Backend.Security.Permissions");
Telerik.Sitefinity.Web.UI.Backend.Security.Permissions.ActionUsersSelection=function(element){Telerik.Sitefinity.Web.UI.Backend.Security.Permissions.ActionUsersSelection.initializeBase(this,[element]);
this._onLoadPermissions=null;
this._actionName=null;
this._permissionSetName=null;
this._dataProviderName=null;
this._managerClassName=null;
this._permissionsUrl=null;
this._securedObjectType=null;
this._dynamicDataProviderName=null;
this._administratorRoleSelected=null;
this._everyoneRoleSelected=null;
this._backendRoleSelected=null;
this._specificPrincipalsSelected=null;
this._everyoneRoleName=null;
this._backendRoleName=null;
this._inheritsPermissions=null;
this._usersSelectionMode=null;
this._wcfPrincipalType=null;
this._principalRemoveText=null;
this._specificUsersRadioActiveHtml=null;
this._specificUsersRadioInactiveHtml=null;
this._SpecificDeniedUsersActiveHtml=null;
this._SpecificDeniedUsersInactiveHtml=null;
this._ctrlID=null;
this._permissionObjectRootID=null;
this._allowedSelectedUsersRadioButtonID=null;
this._allowedUsersOrRolesListPanelID=null;
this._saveLinkButtonID=null;
this._closeLinkButtonID=null;
this._addRolesOrUsersDeniedLinkButtonID=null;
this._securedObjectID=null;
this._actualSecuredObjectId=null;
this._allowedEveryoneRadioButtonID=null;
this._allowedBackendUsersRadioButtonID=null;
this._allowedAdminsOnlyRadioButtonID=null;
this._principalSelectionPanelID=null;
this._everyoneRoleID=null;
this._backendRoleID=null;
this._explicitlyDeniedCheckboxID=null;
this._deniedUsersOrRolesListPanelID=null;
this._openUsersSelectionBoxLinkButtonID=null;
this._doneSelectingLinkID=null;
this._cancelSelectingLinkID=null;
this._principalSelector=null;
this._selectedAllowedKeysArray=new Array();
this._selectedDeniedKeysArray=new Array();
this._deselectedPrincipals=new Array();
this._adminsOnlyConstText="AdminsOnly";
this._isDirty=false;
this._arrayActionEntities=new Array();
this._activeUserSelectionMode=null;
this._selectedAppRole=null;
this._allowedUsersCounter=0;
this._deniedUsersCounter=0;
this._saveData=null;
};
Telerik.Sitefinity.Web.UI.Backend.Security.Permissions.ActionUsersSelection.prototype={initialize:function(){Telerik.Sitefinity.Web.UI.Backend.Security.Permissions.ActionUsersSelection.callBaseMethod(this,"initialize");
Sys.Application.add_load(Function.createDelegate(this,this.onload));
this._usersSelectionMode=Sys.Serialization.JavaScriptSerializer.deserialize(this._usersSelectionMode);
this._wcfPrincipalType=Sys.Serialization.JavaScriptSerializer.deserialize(this._wcfPrincipalType);
this._onLoadPermissions=Sys.Serialization.JavaScriptSerializer.deserialize(this._onLoadPermissions);
this._specificPrincipalsSelected=Sys.Serialization.JavaScriptSerializer.deserialize(this._specificPrincipalsSelected);
this._everyoneRoleSelected=Sys.Serialization.JavaScriptSerializer.deserialize(this._everyoneRoleSelected);
this._administratorRoleSelected=Sys.Serialization.JavaScriptSerializer.deserialize(this._administratorRoleSelected);
this._backendRoleSelected=Sys.Serialization.JavaScriptSerializer.deserialize(this._backendRoleSelected);
this._inheritsPermissions=Sys.Serialization.JavaScriptSerializer.deserialize(this._inheritsPermissions);
this._activeUserSelectionMode=this._usersSelectionMode.AllowedUsers;
var OpenUsersSelectionBoxLinkButton=$get(this._openUsersSelectionBoxLinkButtonID);
var addRolesOrUsersDeniedLinkButton=$get(this._addRolesOrUsersDeniedLinkButtonID);
var explicitlyDeniedCheckbox=$get(this._explicitlyDeniedCheckboxID);
var allowedSelectedUsersRadioButton=$get(this._allowedSelectedUsersRadioButtonID);
var allowedEveryoneRadioButton=$get(this._allowedEveryoneRadioButtonID);
var allowedBackendUsersRadioButton=$get(this._allowedBackendUsersRadioButtonID);
var allowedAdminsOnlyRadioButton=$get(this._allowedAdminsOnlyRadioButtonID);
var doneSelectingLink=$get(this._doneSelectingLinkID);
var cancelSelectingLink=$get(this._cancelSelectingLinkID);
var SaveLinkButton=$get(this._saveLinkButtonID);
var CloseLinkButton=$get(this._closeLinkButtonID);
allowedSelectedUsersRadioButton.checked=this._specificPrincipalsSelected;
allowedEveryoneRadioButton.checked=this._everyoneRoleSelected;
allowedBackendUsersRadioButton.checked=this._backendRoleSelected;
allowedAdminsOnlyRadioButton.checked=this._administratorRoleSelected;
this._radioButtonSelectionChanged();
this._explicitlyDeniedCheckboxClickDelegate=Function.createDelegate(this,this._setDeniedArea);
this._radioButtonClickDelegate=Function.createDelegate(this,this._radioButtonSelectionChanged);
this._principalsDeselectedDelegate=Function.createDelegate(this,this._principalsDeselected);
this._doneSelectingPrincipalskDelegate=Function.createDelegate(this,this._doneSelectingPrincipals);
this._cancelSelectingDelegate=Function.createDelegate(this,this._cancelSelectingPrincipals);
this._selectDeniedUsersLinkButtonClickDelegate=Function.createDelegate(this,this._openDeniedUsersSelectionBoxLink_Click);
this._openUsersSelectionBoxLinkButtonClickDelegate=Function.createDelegate(this,this._openUsersSelectionBoxLink_Click);
this._clickSaveDelegate=Function.createDelegate(this,this._saveAndClose);
this._clickCancelDelegate=Function.createDelegate(this,this._closeWindow);
$addHandler(allowedSelectedUsersRadioButton,"click",this._radioButtonClickDelegate);
$addHandler(allowedEveryoneRadioButton,"click",this._radioButtonClickDelegate);
$addHandler(allowedBackendUsersRadioButton,"click",this._radioButtonClickDelegate);
$addHandler(allowedAdminsOnlyRadioButton,"click",this._radioButtonClickDelegate);
$addHandler(explicitlyDeniedCheckbox,"click",this._explicitlyDeniedCheckboxClickDelegate);
$addHandler(doneSelectingLink,"click",this._doneSelectingPrincipalskDelegate);
$addHandler(cancelSelectingLink,"click",this._cancelSelectingDelegate);
$addHandler(addRolesOrUsersDeniedLinkButton,"click",this._selectDeniedUsersLinkButtonClickDelegate);
$addHandler(OpenUsersSelectionBoxLinkButton,"click",this._openUsersSelectionBoxLinkButtonClickDelegate);
$addHandler(SaveLinkButton,"click",this._clickSaveDelegate);
$addHandler(CloseLinkButton,"click",this._clickCancelDelegate);
this._attachItemDeselectedHandler();
},dispose:function(){Telerik.Sitefinity.Web.UI.Backend.Security.Permissions.ActionUsersSelection.callBaseMethod(this,"dispose");
var addRolesOrUsersDeniedLinkButton=$get(this._addRolesOrUsersDeniedLinkButtonID);
var OpenUsersSelectionBoxLinkButton=$get(this._openUsersSelectionBoxLinkButtonID);
var SaveLinkButton=$get(this._saveLinkButtonID);
var CloseLinkButton=$get(this._closeLinkButtonID);
var doneSelectingLink=$get(this._doneSelectingLinkID);
var cancelSelectingLink=$get(this._cancelSelectingLinkID);
var explicitlyDeniedCheckbox=$get(this._explicitlyDeniedCheckboxID);
var allowedSelectedUsersRadioButton=$get(this._allowedSelectedUsersRadioButtonID);
var allowedEveryoneRadioButton=$get(this._allowedEveryoneRadioButtonID);
var allowedAdminsOnlyRadioButton=$get(this._allowedAdminsOnlyRadioButtonID);
var allowedBackendUsersRadioButton=$get(this._allowedBackendUsersRadioButtonID);
$removeHandler(allowedSelectedUsersRadioButton,"click",this._radioButtonClickDelegate);
$removeHandler(allowedBackendUsersRadioButton,"click",this._radioButtonClickDelegate);
$removeHandler(allowedEveryoneRadioButton,"click",this._radioButtonClickDelegate);
$removeHandler(allowedAdminsOnlyRadioButton,"click",this._radioButtonClickDelegate);
$removeHandler(explicitlyDeniedCheckbox,"click",this._explicitlyDeniedCheckboxClickDelegate);
$removeHandler(addRolesOrUsersDeniedLinkButton,"click",this._selectDeniedUsersLinkButtonClickDelegate);
$removeHandler(OpenUsersSelectionBoxLinkButton,"click",this._openUsersSelectionBoxLinkButtonClickDelegate);
$removeHandler(doneSelectingLink,"click",this._doneSelectingPrincipalskDelegate);
$removeHandler(cancelSelectingLink,"click",this._cancelSelectingDelegate);
$removeHandler(SaveLinkButton,"click",this._clickSaveDelegate);
$removeHandler(CloseLinkButton,"click",this._clickCancelDelegate);
},onload:function(){var addRolesOrUsersDeniedLinkButton=$get(this._addRolesOrUsersDeniedLinkButtonID);
var allowedSelectedUsersRadioButton=$get(this._allowedSelectedUsersRadioButtonID);
var OpenUsersSelectionBoxLinkButton=$get(this._openUsersSelectionBoxLinkButtonID);
var explicitlyDeniedCheckbox=$get(this._explicitlyDeniedCheckboxID);
var allowedBackendUsersRadioButton=$get(this._allowedBackendUsersRadioButtonID);
var principalSelector=$find(this._principalSelector);
this._rolesSelectorInitializedDelegate=Function.createDelegate(this,this._rolesSelector_Initialized);
if((this._inheritsPermissions)&&(allowedBackendUsersRadioButton.checked)){var roleSelector=this.get_principalSelector().getSelectorItemByName("rolesSelector");
roleSelector.add_selectorInitialized(this._rolesSelectorInitializedDelegate);
}var clientManager=new Telerik.Sitefinity.Data.ClientManager();
var securedObjectId=this._securedObjectID;
if(this._actualSecuredObjectId&&this._actualSecuredObjectId.toUpperCase().trim()!=clientManager.GetEmptyGuid()&&(this._actualSecuredObjectId.toUpperCase().trim()!="")){securedObjectId=this._actualSecuredObjectId;
}for(var i=0;
i<this._onLoadPermissions.length;
i++){if((this._specificPrincipalsSelected)||(this._onLoadPermissions[i].IsDenied)){var inheritedPermissionThereforeLocked=(this._onLoadPermissions[i].SecuredObjectId.toUpperCase().trim()!=securedObjectId.toUpperCase().trim());
this._addEntityToCollection(this._onLoadPermissions[i].PrincipalType,this._onLoadPermissions[i].PrincipalTitle,this._onLoadPermissions[i].PrincipalID,((this._onLoadPermissions[i].IsAllowed)?this._allowedUsersOrRolesListPanelID:this._deniedUsersOrRolesListPanelID),this._onLoadPermissions[i].IsAllowed,this._onLoadPermissions[i].IsDenied,inheritedPermissionThereforeLocked);
}}explicitlyDeniedCheckbox.checked=(this._deniedUsersCounter>0);
this._setDeniedArea();
this._displayUserSelectionLink(allowedSelectedUsersRadioButton.checked);
this._isDirty=false;
jQuery("body").addClass("sfSelectorDialog sfOverflowHiddenX");
this._autosizeMe();
},wcfPermission:function(entityType,entityName,entityID,isAllowed,isDenied,actionName,isInherited){this.PrincipalType=entityType;
this.PrincipalID=entityID;
this.PrincipalName=entityName;
this.IsAllowed=isAllowed;
this.IsDenied=isDenied;
this.ActionName=actionName;
this.IsInherited=isInherited;
},listedBoundPrincipal:function(principalListItemElement,principalId){this.PrincipalListItemElement=principalListItemElement;
this.PrincipalId=principalId;
},_attachItemDeselectedHandler:function(){var selectors=this.get_principalSelector()._selectors;
for(var selectorName in selectors){if(selectors.hasOwnProperty(selectorName)){var selector=selectors[selectorName];
selector.add_itemDeselected(this._principalsDeselectedDelegate);
}}},_rolesSelector_Initialized:function(){var allowedBackendUsersRadioButton=$get(this._allowedBackendUsersRadioButtonID);
if((this._inheritsPermissions)&&(allowedBackendUsersRadioButton.checked)){var roleSelector=this.get_principalSelector().findSelectorByName("rolesSelector");
var rolesFilter=roleSelector.get_constantFilter();
rolesFilter=((rolesFilter=="")?"(":"(("+rolesFilter+") and ");
rolesFilter+="(Id != ("+this._backendRoleID+")))";
roleSelector.set_constantFilter(rolesFilter);
roleSelector.bindSelector();
}},_setRadioButtonTexts:function(){var allowedSelectedUsersRadioButton=$get(this._allowedSelectedUsersRadioButtonID);
this._setServerControlLabelHTML(this._allowedSelectedUsersRadioButtonID,(allowedSelectedUsersRadioButton.checked)?this._specificUsersRadioActiveHtml:this._specificUsersRadioInactiveHtml);
},_setDeniedArea:function(){var explicitlyDeniedCheckbox=$get(this._explicitlyDeniedCheckboxID);
var deniedUsersOrRolesListPanel=$get(this._deniedUsersOrRolesListPanelID);
this._setServerControlLabelHTML(this._explicitlyDeniedCheckboxID,(explicitlyDeniedCheckbox.checked)?this._SpecificDeniedUsersActiveHtml:this._SpecificDeniedUsersInactiveHtml);
this._toggleControlDisplay(deniedUsersOrRolesListPanel,(explicitlyDeniedCheckbox.checked));
this._isDirty=true;
if(!explicitlyDeniedCheckbox.checked){var deniedUsersOrRolesListItems=deniedUsersOrRolesListPanel.getElementsByTagName("span");
for(var listScanner=0;
listScanner<deniedUsersOrRolesListItems.length;
listScanner++){var principalDetails=this._getObjectFromPrincipalListItemID(deniedUsersOrRolesListItems[listScanner].id);
if(principalDetails!=null){this._removeEntityFromCollection(deniedUsersOrRolesListItems[listScanner],principalDetails.EntityType,principalDetails.EntityID,principalDetails.IsAllowed,principalDetails.IsDenied);
}}}this._autosizeMe();
},_setServerControlLabelHTML:function(elementId,HTMLContent){var labelElements=$("*").find("label[for='"+elementId+"']");
if(labelElements!=null){this._setLabelHTML(labelElements.get(0),HTMLContent);
}},_setLabelHTML:function(labelElement,HTMLContent){labelElement.innerHTML=HTMLContent;
},_setUsersSelectionBoxDisplay:function(bShow){var principalSelectionPanel=$get(this._principalSelectionPanelID);
this._toggleControlDisplay(principalSelectionPanel,bShow);
this._autosizeMe();
},_toggleControlDisplay:function(ctlElement,bIsDisplayed){if(ctlElement!=null){ctlElement.style.display=((bIsDisplayed)?"block":"none");
}},_toggleLinkButtonDisplay:function(ctlElement,bIsDisplayed){if(ctlElement!=null){ctlElement.className=((bIsDisplayed)?"sfLinkBtn sfChange":"sfDisplayNone");
}},_addEntityToCollection:function(entityType,entityName,entityID,entityUiList,isAllowed,isDenied,isLocked){var entity=new this.wcfPermission(entityType,entityName,entityID,isAllowed,isDenied,this._actionName,isLocked);
var alreadyExists=false;
for(arrayCell=0;
arrayCell<this._arrayActionEntities.length;
arrayCell++){if((this._arrayActionEntities[arrayCell].PrincipalID==entityID)&&(this._arrayActionEntities[arrayCell].IsAllowed==isAllowed)&&(this._arrayActionEntities[arrayCell].IsDenied==isDenied)){alreadyExists=true;
}}var itemsList=$get(entityUiList).getElementsByTagName("ul")[0];
if(!alreadyExists){if(this._arrayActionEntities!=null){this._arrayActionEntities[this._arrayActionEntities.length]=entity;
}if(isAllowed){this._selectedAllowedKeysArray[this._selectedAllowedKeysArray.length]=entityID;
}if(isDenied){this._selectedDeniedKeysArray[this._selectedDeniedKeysArray.length]=entityID;
}this._allowedUsersCounter+=((isAllowed)?1:0);
this._deniedUsersCounter+=((isDenied)?1:0);
var newItem=document.createElement("LI");
if(isLocked){$(newItem).addClass("sfNotToBeRemoved");
}else{var removeSpan=document.createElement("SPAN");
removeSpan.appendChild(document.createTextNode(this._principalRemoveText));
removeSpan.setAttribute("id",this._ctrlID+"___"+entityID+"_"+entityType+"_"+isAllowed+"_"+isDenied);
this._newItemClickDelegate=Function.createDelegate(this,this._selectedPrincipal_Click);
$addHandler(removeSpan,"click",this._newItemClickDelegate);
}newItem.appendChild(document.createTextNode(entityName));
itemsList.appendChild(newItem);
if(!isLocked){newItem.appendChild(removeSpan);
}this._isDirty=true;
var allowedBackendUsersRadioButton=$get(this._allowedBackendUsersRadioButtonID);
var allowedAdminsOnlyRadioButton=$get(this._allowedAdminsOnlyRadioButtonID);
if((entityID==this._backendRoleID)&&(entityType==this._wcfPrincipalType.Role)&&(allowedBackendUsersRadioButton.checked)&&(!this._inheritsPermissions)&&(isDenied)){allowedAdminsOnlyRadioButton.checked=true;
this._radioButtonSelectionChanged();
}var theOtherList=$get(((isAllowed)?this._deniedUsersOrRolesListPanelID:this._allowedUsersOrRolesListPanelID));
var theOtherListItems=theOtherList.getElementsByTagName("span");
for(var listScanner=0;
listScanner<theOtherListItems.length;
listScanner++){var principalDetails=this._getObjectFromPrincipalListItemID(theOtherListItems[listScanner].id);
if(principalDetails!=null){if((principalDetails.EntityID==entityID)&&(principalDetails.IsAllowed==!isAllowed)&&(principalDetails.IsDenied==!isDenied)){this._removeEntityFromCollection(theOtherListItems[listScanner],principalDetails.EntityType,principalDetails.EntityID,principalDetails.IsAllowed,principalDetails.IsDenied);
}}}this._autosizeMe();
}},_removeEntityFromCollection:function(liRemovalItem,entityType,entityID,isAllowed,isDenied){liRemovalItem.parentNode.parentNode.removeChild(liRemovalItem.parentNode);
this._allowedUsersCounter-=((isAllowed)?1:0);
this._deniedUsersCounter-=((isDenied)?1:0);
this._isDirty=true;
for(var arrayCell=0;
arrayCell<this._arrayActionEntities.length;
arrayCell++){if((this._arrayActionEntities[arrayCell].PrincipalType==entityType)&&(this._arrayActionEntities[arrayCell].PrincipalID==entityID)&&(this._arrayActionEntities[arrayCell].IsAllowed==isAllowed)&&(this._arrayActionEntities[arrayCell].IsDenied==isDenied)){this._arrayActionEntities.splice(arrayCell,1);
break;
}}if(isAllowed){for(var arrayCell=0;
arrayCell<this._selectedAllowedKeysArray.length;
arrayCell++){if(this._selectedAllowedKeysArray[arrayCell]==entityID){this._selectedAllowedKeysArray.splice(arrayCell,1);
}}}if(isDenied){for(var arrayCell=0;
arrayCell<this._selectedDeniedKeysArray.length;
arrayCell++){if(this._selectedDeniedKeysArray[arrayCell]==entityID){this._selectedDeniedKeysArray.splice(arrayCell,1);
}}}this._autosizeMe();
},_displayUserSelectionLink:function(bShow){var UserSelectionLink=$get(this._openUsersSelectionBoxLinkButtonID);
this._toggleLinkButtonDisplay(UserSelectionLink,bShow);
},_displaySelectedAllowedUsers:function(bShow){var AllowedUsersPanel=$get(this._allowedUsersOrRolesListPanelID);
this._toggleControlDisplay(AllowedUsersPanel,bShow);
},_autosizeMe:function(){var sWin=this._getRadWindow();
sWin.autoSize();
var add=26;
if(jQuery.browser.msie){add=40;
}else{if(jQuery.browser.safari){add=40;
}}sWin.set_height(sWin.get_height()+26);
},_setWindowWidth:function(newWidth){var sWin=this._getRadWindow();
sWin.set_width(newWidth);
},_closeWindow:function(){this._closeMe(null);
},_closeMe:function(closeArgument){var dialog=this._getRadWindow();
dialog.close(closeArgument);
},_getRadWindow:function(){var oWindow=null;
if(window.radWindow){oWindow=window.radWindow;
}else{if(window.frameElement.radWindow){oWindow=window.frameElement.radWindow;
}}return oWindow;
},_radioButtonSelectionChanged:function(){var entityID="";
var entityName="";
var allowedSelectedUsersRadioButton=$get(this._allowedSelectedUsersRadioButtonID);
var allowedEveryoneRadioButton=$get(this._allowedEveryoneRadioButtonID);
var allowedBackendUsersRadioButton=$get(this._allowedBackendUsersRadioButtonID);
var allowedAdminsOnlyRadioButton=$get(this._allowedAdminsOnlyRadioButtonID);
if(allowedSelectedUsersRadioButton.checked){entityName="";
entityID="";
}else{if(allowedEveryoneRadioButton.checked){entityName=this._everyoneRoleName;
entityID=this._everyoneRoleID;
}else{if(allowedBackendUsersRadioButton.checked){entityName=this._backendRoleName;
entityID=this._backendRoleID;
var deniedList=$get(this._deniedUsersOrRolesListPanelID).getElementsByTagName("ul")[0];
var deniedPrincipals=deniedList.getElementsByTagName("span");
for(var i=0;
i<deniedPrincipals.length;
i++){var details=this._getObjectFromPrincipalListItemID(deniedPrincipals[i].id);
if(details.EntityID==this._backendRoleID){this._deniedUsersCounter--;
deniedPrincipals[i].parentNode.parentNode.removeChild(deniedPrincipals[i].parentNode);
for(var arrayCell=0;
arrayCell<this._selectedDeniedKeysArray.length;
arrayCell++){if(this._selectedDeniedKeysArray[arrayCell]==this._backendRoleID){this._selectedDeniedKeysArray.splice(arrayCell,1);
}}for(var arrayCell=0;
arrayCell<this._arrayActionEntities.length;
arrayCell++){if((this._arrayActionEntities[arrayCell].PrincipalType==this._wcfPrincipalType.Role)&&(this._arrayActionEntities[arrayCell].PrincipalID==this._backendRoleID)&&(this._arrayActionEntities[arrayCell].IsAllowed==false)&&(this._arrayActionEntities[arrayCell].IsDenied==true)){this._arrayActionEntities.splice(arrayCell,1);
break;
}}}}}else{if(allowedAdminsOnlyRadioButton.checked){entityName=this._adminsOnlyConstText;
entityID="";
}}}}this._setRadioButtonTexts();
this._userSelectionChanged(entityID,entityName);
this._autosizeMe();
},_openUsersSelectionBoxLink_Click:function(){this.get_principalSelector().resetSelectorsPageIndexes();
this._activeUserSelectionMode=this._usersSelectionMode.AllowedUsers;
this.get_principalSelector().setSelectedKeys(this._selectedAllowedKeysArray);
this._setUsersSelectionBoxDisplay(true);
},_getIdFromPrincipalObject:function(principal){var principalId;
var principalType;
var isAllowed=(this._activeUserSelectionMode==this._usersSelectionMode.AllowedUsers);
if(typeof(principal.UserID)!="undefined"){principalId=principal.UserID;
principalType=this._wcfPrincipalType.User;
}else{if(typeof(principal.Id)!="undefined"){principalId=principal.Id;
principalType=this._wcfPrincipalType.Role;
}}return this._ctrlID+"___"+principalId+"_"+principalType+"_"+isAllowed+"_"+!isAllowed;
},_principalsDeselected:function(sender,args){var item=this._getIdFromPrincipalObject(args);
this._deselectedPrincipals.push(item);
},_openDeniedUsersSelectionBoxLink_Click:function(){this.get_principalSelector().resetSelectorsPageIndexes();
this._activeUserSelectionMode=this._usersSelectionMode.DeniedUsers;
this.get_principalSelector().setSelectedKeys(this._selectedDeniedKeysArray);
this._setUsersSelectionBoxDisplay(true);
},_doneSelectingPrincipals:function(){var principalId="";
var principalName="";
var principalType="";
var isAllowed=(this._activeUserSelectionMode==this._usersSelectionMode.AllowedUsers);
var updatePanel=(isAllowed?this._allowedUsersOrRolesListPanelID:this._deniedUsersOrRolesListPanelID);
var selctionsPanel=$get(updatePanel).getElementsByTagName("ul")[0];
if(selctionsPanel){var children=selctionsPanel.children;
var len=children.length;
for(var i=len-1;
i>=0;
i--){var child=children[i];
for(var j=0;
j<this._deselectedPrincipals.length;
j++){var deselectedPrincipal=this._deselectedPrincipals[j];
if(child.lastChild.id==deselectedPrincipal){var removedItem=this._getObjectFromPrincipalListItemID(deselectedPrincipal);
this._removeEntityFromCollection(child.lastChild,removedItem.EntityType,removedItem.EntityID,removedItem.IsAllowed,removedItem.IsDenied);
break;
}}}}this._deselectedPrincipals=new Array();
var selections=this.get_principalSelector().getSelectedValuesFromAllSelectors();
for(var curSelected=0;
curSelected<selections.length;
curSelected++){selectedItem=selections[curSelected];
if(typeof(selectedItem.UserID)!="undefined"){principalId=selectedItem.UserID;
var principalTitle="";
if(selectedItem.FirstName||selectedItem.LastName){principalTitle+=selectedItem.FirstName?selectedItem.FirstName:"";
if(selectedItem.LastName){principalTitle+=selectedItem.FirstName?" ":"";
principalTitle+=selectedItem.LastName;
}}else{principalTitle=selectedItem.Email;
}principalName=principalTitle;
principalType=this._wcfPrincipalType.User;
}else{if(typeof(selectedItem.Id)!="undefined"){principalId=selectedItem.Id;
principalName=selectedItem.Name;
principalType=this._wcfPrincipalType.Role;
}}this._addEntityToCollection(principalType,principalName,principalId,updatePanel,isAllowed,!isAllowed,false);
}this._setUsersSelectionBoxDisplay(false);
},_cancelSelectingPrincipals:function(){this._setUsersSelectionBoxDisplay(false);
},_selectedPrincipal_Click:function(sender,commandArgs){var liRemovalItem=sender.target;
var principalDetails=this._getObjectFromPrincipalListItemID(liRemovalItem.id);
if(principalDetails!=null){this._removeEntityFromCollection(liRemovalItem,principalDetails.EntityType,principalDetails.EntityID,principalDetails.IsAllowed,principalDetails.IsDenied);
}},_getObjectFromPrincipalListItemID:function(liID){var retObj=new Object();
var idParts=liID.split("___");
if(idParts.length<2){return null;
}var detailParts=idParts[1].split("_");
if(detailParts.length<4){return null;
}retObj.EntityType=detailParts[1];
retObj.EntityID=detailParts[0];
retObj.IsAllowed=(detailParts[2].toUpperCase()=="TRUE");
retObj.IsDenied=(detailParts[3].toUpperCase()=="TRUE");
return retObj;
},_userSelectionChanged:function(AppRoleID,EntityName){var rbSelectedUsers=$get(this._allowedSelectedUsersRadioButtonID);
var OpenUsersSelectionBoxLinkButton=$get(this._openUsersSelectionBoxLinkButtonID);
if(rbSelectedUsers!=null){if(rbSelectedUsers.checked){this._selectedAppRole=null;
this._displayUserSelectionLink(true);
this._displaySelectedAllowedUsers(true);
}else{this._selectedAppRole=new this.wcfPermission(this._wcfPrincipalType.Role,EntityName,AppRoleID,true,false,this._actionName,this._inheritsPermissions);
this._displayUserSelectionLink(false);
this._displaySelectedAllowedUsers(false);
}this._isDirty=true;
}this._autosizeMe();
},_saveAndClose:function(){if(!this._isDirty){this._closeMe(null);
}else{var explicitlyDeniedCheckbox=$get(this._explicitlyDeniedCheckboxID);
var keys=new Array();
keys[keys.length]=this._permissionSetName;
keys[keys.length]=this._dataProviderName;
keys[keys.length]=this._actionName;
var params={permissionObjectRootID:this._permissionObjectRootID,managerClassName:this._managerClassName,securedObjectID:this._securedObjectID,securedObjectType:this._securedObjectType,dynamicDataProviderName:this._dynamicDataProviderName};
if(this._selectedAppRole==null){this._saveData=this._arrayActionEntities;
}else{this._saveData=new Array();
if(this._selectedAppRole.PrincipalName!=this._adminsOnlyConstText){this._saveData[this._saveData.length]=this._selectedAppRole;
}for(var i=0;
i<this._arrayActionEntities.length;
i++){if((this._arrayActionEntities[i].IsDenied)&&(explicitlyDeniedCheckbox.checked)){this._saveData[this._saveData.length]=this._arrayActionEntities[i];
}}}var dataSaver=new Telerik.Sitefinity.Data.ClientManager();
dataSaver.InvokePut(this._permissionsUrl,params,keys,this._saveData,this._savedSuccessfully,this._saveFailure,this);
}},_savedSuccessfully:function(sender,data){var oWindow=null;
if(window.radWindow){oWindow=window.radWindow;
}else{if(window.frameElement.radWindow){oWindow=window.frameElement.radWindow;
}}for(var i=0;
i<sender._saveData.length;
i++){if(sender._saveData[i].PrincipalName==this._adminsOnlyConstText){sender._saveData.splice(i,1);
}}oWindow.close(Sys.Serialization.JavaScriptSerializer.serialize(sender._saveData));
},_saveFailure:function(error){alert(error.Detail);
},get_principalSelector:function(){return this._principalSelector;
},set_principalSelector:function(value){this._principalSelector=value;
}};
Telerik.Sitefinity.Web.UI.Backend.Security.Permissions.ActionUsersSelection.registerClass("Telerik.Sitefinity.Web.UI.Backend.Security.Permissions.ActionUsersSelection",Sys.UI.Control);
